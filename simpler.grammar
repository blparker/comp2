
program     = block

block       = statement { NEWLINE statement }
inner_block = INDENT block DEDENT

statement   = if_stmt
            | for_stmt
            | assign_stmt
            | function_call
            | arith_stmt

assign_stmt = 'var' IDENTIFIER [ '=' expr ]
            | IDENTIFIER '=' expr

if_stmt       = 'if' expr NEWLINE inner_block { 'else if' expr NEWLINE inner_block } [ 'else' NEWLINE inner_block ]
for_stmt      = expanded_for | condensed_for
expanded_for  = 'for' IDENTIFIER '=' expr ',' expr, [ ',' expr ] NEWLINE inner_block
condensed_for = 'for' identifier_list 'in' expr_list NEWLINE inner_block

arith_stmt    = simple_arith [ relop simple_arith ]
simple_arith  = arith_term { addop arith_term }
relop         = '<=' | '<' | '>' | '>=' | '==' | '!='
addop         = '+' | '-'
arith_term    = arith_factor { mulop arith_factor }
mulop         = '*' | '/'
arith_factor  = '(' arith_stmt ')' | NUMBER | IDENTIFIER

expr        = null
            | function_call
            | simple_type
//            | compound_type
//            | function

simple_type = true | false | NUMBER | STRING | IDENTIFIER
compound_type = array_decl

function_call = IDENTIFIER '(' [ expr_list ] ')'
              | IDENTIFIER expr_list

expr_list       = { expr ',' } expr
identifier_list = IDENTIFIER { ',' IDENTIFIER }


